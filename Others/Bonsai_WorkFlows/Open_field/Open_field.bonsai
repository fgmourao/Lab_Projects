<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.3.0">
  <Workflow xmlns:q1="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:q2="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:q3="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="q1:CsvWriter">
        <q1:FileName>M1.csv</q1:FileName>
        <q1:Append>false</q1:Append>
        <q1:Overwrite>true</q1:Overwrite>
        <q1:Suffix>None</q1:Suffix>
        <q1:IncludeHeader>false</q1:IncludeHeader>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Frame Count X and Y Coordenates</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Add">
              <Operand xsi:type="IntProperty">
                <Value>1</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Centroid</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Index</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:LargestBinaryRegion" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Index" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:BinaryRegionAnalysis" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:FindContours">
                <q2:Mode>ConnectedComponent</q2:Mode>
                <q2:Method>ChainApproxSimple</q2:Method>
                <q2:Offset>
                  <q2:X>1</q2:X>
                  <q2:Y>0</q2:Y>
                </q2:Offset>
                <q2:MinArea xsi:nil="true" />
                <q2:MaxArea xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:MorphologicalOperator">
                <q2:Size>
                  <q2:Width>4</q2:Width>
                  <q2:Height>3</q2:Height>
                </q2:Size>
                <q2:Anchor>
                  <q2:X>1</q2:X>
                  <q2:Y>1</q2:Y>
                </q2:Anchor>
                <q2:Shape>Ellipse</q2:Shape>
                <q2:Iterations>5</q2:Iterations>
                <q2:Operation>Open</q2:Operation>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:Threshold">
                <q2:ThresholdValue>23</q2:ThresholdValue>
                <q2:MaxValue>255</q2:MaxValue>
                <q2:ThresholdType>BinaryInv</q2:ThresholdType>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:MaskPolygon">
                <q2:MaskType>Binary</q2:MaskType>
                <q2:FillValue>
                  <q2:Val0>1</q2:Val0>
                  <q2:Val1>1</q2:Val1>
                  <q2:Val2>1</q2:Val2>
                  <q2:Val3>1</q2:Val3>
                </q2:FillValue>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>11</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>11</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>9</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>10</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>10</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>11</From>
              <To>12</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>OUT</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="q3:PythonTransform">
              <q3:Script>from System import Math, Single

@returns(float)
def process(value):
  if Single.IsNaN(value.X) or Single.IsNaN(value.Y):
    return 1
  return 0</q3:Script>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Centroid</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:LargestBinaryRegion" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:BinaryRegionAnalysis" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:FindContours">
                <q2:Mode>ConnectedComponent</q2:Mode>
                <q2:Method>ChainApproxSimple</q2:Method>
                <q2:Offset>
                  <q2:X>1</q2:X>
                  <q2:Y>0</q2:Y>
                </q2:Offset>
                <q2:MinArea xsi:nil="true" />
                <q2:MaxArea xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:MorphologicalOperator">
                <q2:Size>
                  <q2:Width>3</q2:Width>
                  <q2:Height>3</q2:Height>
                </q2:Size>
                <q2:Anchor>
                  <q2:X>1</q2:X>
                  <q2:Y>1</q2:Y>
                </q2:Anchor>
                <q2:Shape>Ellipse</q2:Shape>
                <q2:Iterations>5</q2:Iterations>
                <q2:Operation>Erode</q2:Operation>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:Threshold">
                <q2:ThresholdValue>23</q2:ThresholdValue>
                <q2:MaxValue>255</q2:MaxValue>
                <q2:ThresholdType>BinaryInv</q2:ThresholdType>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:MaskPolygon">
                <q2:MaskType>ToZero</q2:MaskType>
                <q2:FillValue>
                  <q2:Val0>0</q2:Val0>
                  <q2:Val1>0</q2:Val1>
                  <q2:Val2>0</q2:Val2>
                  <q2:Val3>0</q2:Val3>
                </q2:FillValue>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Crop">
          <q2:RegionOfInterest>
            <q2:X>290</q2:X>
            <q2:Y>123</q2:Y>
            <q2:Width>228</q2:Width>
            <q2:Height>222</q2:Height>
          </q2:RegionOfInterest>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Crop">
          <q2:RegionOfInterest>
            <q2:X>290</q2:X>
            <q2:Y>123</q2:Y>
            <q2:Width>228</q2:Width>
            <q2:Height>222</q2:Height>
          </q2:RegionOfInterest>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Grayscale" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:FileCapture">
          <q2:FileName>C:\Users\Flávio  Mourão\Desktop\cb41m14t.avi</q2:FileName>
          <q2:PlaybackRate>90</q2:PlaybackRate>
          <q2:StartPosition>0</q2:StartPosition>
          <q2:PositionUnits>Frames</q2:PositionUnits>
          <q2:Loop>false</q2:Loop>
          <q2:Playing>true</q2:Playing>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Crop">
          <q2:RegionOfInterest>
            <q2:X>176</q2:X>
            <q2:Y>12</q2:Y>
            <q2:Width>456</q2:Width>
            <q2:Height>444</q2:Height>
          </q2:RegionOfInterest>
        </Combinator>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>IN</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="q3:PythonTransform">
              <q3:Script>from System import Math, Single

@returns(float)
def process(value):
  if Single.IsNaN(value.X) or Single.IsNaN(value.Y):
    return 0
  return 2</q3:Script>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Centroid</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:LargestBinaryRegion" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:BinaryRegionAnalysis" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:FindContours">
                <q2:Mode>ConnectedComponent</q2:Mode>
                <q2:Method>ChainApproxSimple</q2:Method>
                <q2:Offset>
                  <q2:X>1</q2:X>
                  <q2:Y>0</q2:Y>
                </q2:Offset>
                <q2:MinArea xsi:nil="true" />
                <q2:MaxArea xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:MorphologicalOperator">
                <q2:Size>
                  <q2:Width>3</q2:Width>
                  <q2:Height>3</q2:Height>
                </q2:Size>
                <q2:Anchor>
                  <q2:X>1</q2:X>
                  <q2:Y>1</q2:Y>
                </q2:Anchor>
                <q2:Shape>Ellipse</q2:Shape>
                <q2:Iterations>5</q2:Iterations>
                <q2:Operation>Erode</q2:Operation>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:Threshold">
                <q2:ThresholdValue>23</q2:ThresholdValue>
                <q2:MaxValue>255</q2:MaxValue>
                <q2:ThresholdType>BinaryInv</q2:ThresholdType>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:MaskPolygon">
                <q2:MaskType>ToZero</q2:MaskType>
                <q2:FillValue>
                  <q2:Val0>0</q2:Val0>
                  <q2:Val1>0</q2:Val1>
                  <q2:Val2>0</q2:Val2>
                  <q2:Val3>0</q2:Val3>
                </q2:FillValue>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>1</From>
        <To>0</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>1</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>9</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>8</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>9</From>
        <To>1</To>
        <Label>Source3</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.IO.CsvWriter, Bonsai.System, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.AddBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.IntProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.LargestBinaryRegion, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Index, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BinaryRegionAnalysis, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FindContours, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.MorphologicalOperator, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Threshold, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.MaskPolygon, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Crop, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Grayscale, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FileCapture, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>